const multer = require('multer'); 
const path = require('path');
const fs = require('fs');

// –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const folders = [
  'uploads/news/',
  'uploads/publishing/',
  'uploads/authors/',
  'uploads/articles/',
  'uploads/contact/' 
];

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
folders.forEach(dir => {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
    console.log(`üìÅ Created folder: ${dir}`);
  }
});

// –§—É–Ω–∫—Ü–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è multer —Å –ª–æ–≥–∞–º–∏
const storage = (folder) => multer.diskStorage({
  destination: (req, file, cb) => {
    console.log(`üìù Saving file to folder: ${folder}`);
    cb(null, folder);
  },
  filename: (req, file, cb) => {
    const timestamp = Date.now();
    const ext = path.extname(file.originalname);
    const filename = `${timestamp}${ext}`;
    console.log(`üìù Generated filename: ${filename}`);
    cb(null, filename);
  },
});

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Ñ–∞–π–ª–æ–≤
const fileFilter = (allowedExts) => (req, file, cb) => {
  const ext = path.extname(file.originalname).toLowerCase();
  if (allowedExts.includes(ext)) {
    console.log(`‚úÖ Accepted file: ${file.originalname}`);
    cb(null, true);
  } else {
    console.log(`‚ùå Rejected file: ${file.originalname}`);
    cb(new Error(`Only ${allowedExts.join(', ')} allowed`));
  }
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
const uploadNewsImage = multer({ storage: storage('uploads/news/') });
const uploadPublishingImage = multer({ storage: storage('uploads/publishing/') });
const uploadAuthorFile = multer({ 
  storage: storage('uploads/authors/'), 
  fileFilter: fileFilter(['.pdf', '.doc', '.docx']) 
});
const uploadArticleFile = multer({ 
  storage: storage('uploads/articles/'),  
  fileFilter: fileFilter(['.pdf']) 
});
const uploadContactImage = multer({
  storage: storage('uploads/contact/'), 
  fileFilter: fileFilter(['.jpg', '.jpeg', '.png', '.gif'])
});

module.exports = { 
  uploadNewsImage, 
  uploadPublishingImage, 
  uploadAuthorFile,
  uploadArticleFile,
  uploadContactImage
};
